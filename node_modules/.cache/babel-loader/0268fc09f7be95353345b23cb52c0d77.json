{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"input\"\n};\nconst _hoisted_3 = {\n  class: \"todos\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Task\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"#\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  style: {\n    \"width\": \"120px\"\n  }\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", null, \"edit\", -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"delete\", -1 /* HOISTED */);\nconst _hoisted_12 = [_hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" https://www.youtube.com/watch?v=JrBqMQsMqhA&ab_channel=TechArefin \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event),\n    type: \"text\",\n    placeholder: \"todo eintragen\",\n    class: \"input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.speichern && $options.speichern(...args)),\n    class: \"speichern\"\n  }, \"Speichern\")]), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'finished': task.status == 'finished'\n      })\n    }, _toDisplayString(task.name), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_5, [_createElementVNode(\"span\", {\n      class: \"pointer\",\n      onClick: $event => $options.changeStatus(index)\n    }, _toDisplayString($options.firstCharUpper(task.status)), 9 /* TEXT, PROPS */, _hoisted_6)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      onClick: $event => $options.editTodo(index)\n    }, _hoisted_9, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      onClick: $event => $options.deleteToDo(index)\n    }, _hoisted_12, 8 /* PROPS */, _hoisted_10)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGSA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAO;;EAMXA,KAAK,EAAC;AAAO;gCAChBC,oBAOQ,6BANJA,oBAKK,0BAJDA,oBAAa,YAAT,MAAI,gBACRA,oBAAe,YAAX,QAAM,gBACVA,oBAAU,YAAN,GAAC,gBACLA,oBAAU,YAAN,GAAC;;EASDC,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;gCAGhBD,oBAAiB,cAAX,MAAI;oBAAVE,UAAiB;;iCAKjBF,oBAAmB,cAAb,QAAM;qBAAZG,WAAmB;;mJA9B3C,uBAoCM,OApCNC,UAoCM,GAnCFJ,oBAGM,OAHNK,UAGM,mBAFFL,oBAA8E;+DAA9DM,UAAI;IAAEC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,gBAAgB;IAACT,KAAK,EAAC;iDAArDO,UAAI,KACpBN,oBAA+D;IAAtDS,OAAK,yCAAEC,iDAAS;IAAEX,KAAK,EAAC;KAAY,WAAS,KAI1DC,oBA4BQ,SA5BRW,UA4BQ,GA3BJC,UAOQ,EACRZ,oBAkBQ,mCAjBJa,oBAgBKC,6BAhBuBR,WAAK,GAArBS,IAAI,EAAEC,KAAK;yBAAvBH,oBAgBK;MAhB+BI,GAAG,EAAED;IAAK,IAC1ChB,oBAGK,aAFDA,oBACqB;MADdD,KAAK;QAAA,YAAgBgB,IAAI,CAACG,MAAM;MAAA;wBACpCH,IAAI,CAACI,IAAI,2BAEhBnB,oBAAuH,MAAvHoB,UAAuH,GAA9FpB,oBAAyF;MAAnFD,KAAK,EAAC,SAAS;MAAEU,OAAK,YAAEC,qBAAY,CAACM,KAAK;wBAAKN,uBAAc,CAACK,IAAI,CAACG,MAAM,wCACxGlB,oBAIK,aAHDA,oBAEM;MAFAS,OAAK,YAAEC,iBAAQ,CAACM,KAAK;iDAI/BhB,oBAIK,aAHDA,oBAEM;MAFAS,OAAK,YAAEC,mBAAU,CAACM,KAAK","names":["class","_createElementVNode","style","_hoisted_8","_hoisted_11","_hoisted_1","_hoisted_2","$data","type","placeholder","onClick","$options","_hoisted_3","_hoisted_4","_createElementBlock","_Fragment","task","index","key","status","name","_hoisted_5"],"sourceRoot":"","sources":["/Users/john-simonbachhuber/Studium/6 Semester/Softwareergonomie/ScrumPrototyp/src/components/JohnToDo.vue"],"sourcesContent":["<template>\r\n\r\nhttps://www.youtube.com/watch?v=JrBqMQsMqhA&ab_channel=TechArefin\r\n    <div class=\"container\">\r\n        <div class=\"input\">\r\n            <input v-model=\"task\" type=\"text\" placeholder=\"todo eintragen\" class=\"input\"/>\r\n            <button @click=\"speichern\" class=\"speichern\">Speichern</button>\r\n        </div>\r\n    \r\n    \r\n        <table class=\"todos\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Task</th>\r\n                    <th>Status</th>\r\n                    <th>#</th>\r\n                    <th>#</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(task, index) in tasks\" :key=\"index\">\r\n                    <td> \r\n                        <span :class=\"{'finished' : task.status == 'finished'}\"\r\n                        >{{task.name}}</span>\r\n                    </td>\r\n                    <td style=\"width: 120px\"><span class=\"pointer\" @click=\"changeStatus(index)\">{{firstCharUpper(task.status)}}</span></td>\r\n                    <td>\r\n                        <div @click=\"editTodo(index)\">\r\n                            <span>edit</span>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div @click=\"deleteToDo(index)\">\r\n                            <span>delete</span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    export default {\r\n        data(){\r\n            return {\r\n                task: \"\",\r\n                editTask : null,\r\n                stat: [\"to-do\", \"in-progess\", \"finished\"],\r\n                tasks: [\r\n                {\r\n                    name: \"steal banna\",\r\n                    status: \"to-do\"\r\n                },\r\n                {\r\n                    name: \"213\",\r\n                    status: \"progess\"\r\n                }\r\n                ]\r\n            }\r\n        },\r\n        methods: {\r\n            speichern(){\r\n                if(this.task.length == 0) return;\r\n\r\n                if(this.editTask == null) {\r\n                    this.tasks.push({\r\n                    name: this.task,\r\n                    status: \"to-do\"\r\n                    });\r\n                } else {\r\n                    this.tasks[this.editTask].name = this.task;\r\n                    this.editTask = null\r\n                }\r\n                \r\n                this.task = \"\"\r\n            },\r\n            deleteToDo(index){\r\n                this.tasks.splice(index, 1);\r\n\r\n            },\r\n            editTodo(index) {\r\n                this.task = this.tasks[index].name;\r\n                this.editTask = index;\r\n            },\r\n            changeStatus(index){\r\n                let newIndex = this.stat.indexOf(this.tasks[index].status);\r\n                if(++newIndex > 2) newIndex = 0;\r\n                this.tasks[index].status = this.stat[newIndex];\r\n            },\r\n            firstCharUpper(str){\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n        }\r\n    }\r\n    </script>\r\n    <style>\r\n    .container{\r\n        margin-top: 20px;\r\n    }\r\n    .input{\r\n        margin-right: 20px;\r\n    }\r\n    .pointer{\r\n        cursor: pointer;\r\n    }\r\n    .finished{\r\n        text-decoration: line-through;\r\n        background-color: green;\r\n    }\r\n    </style>\r\n    "]},"metadata":{},"sourceType":"module"}