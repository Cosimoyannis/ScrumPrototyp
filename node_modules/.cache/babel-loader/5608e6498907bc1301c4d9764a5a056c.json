{"ast":null,"code":"import BaseButton from \"@/ui/BaseButton.vue\";\nexport default {\n  components: {\n    BaseButton\n  },\n  data() {\n    return {\n      timeStarted: false,\n      startTimer: null,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      isChecked: false\n    };\n  },\n  methods: {\n    timer() {\n      this.validation();\n      this.timeStarted = true;\n      if (this.hours == 0 && this.minutes == 0 && this.seconds == 0) {\n        this.hours = 0;\n        this.minutes = 0;\n        this.seconds = 0;\n        this.timeStarted = false;\n        this.stopTimer;\n      } else if (this.seconds != 0) {\n        //seconds.value = seconds.value - 1;\n        this.seconds--;\n      } else if (this.minutes != 0 && this.seconds == 0) {\n        this.seconds = 59;\n        this.minutes--;\n      } else if (this.hours != 0 && this.minutes == 0) {\n        this.minutes = 60;\n        this.hours--;\n      }\n      //  console.log(this.seconds);\n      return;\n    },\n    startCountdown() {\n      this.startTimer = setInterval(() => {\n        this.timer();\n      }, 1000);\n    },\n    resetTimer() {\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n      this.stopTimer;\n      this.timeStarted = false;\n    },\n    stopTimer() {\n      clearInterval(this.startTimer);\n    },\n    validation() {\n      if (this.minutes > 60) {\n        this.minutes = 60;\n        alert(\"Es d端rfen nicht mehr als 60 Minuten eingetragen werden\");\n      }\n      if (this.seconds > 60) {\n        this.seconds = 60;\n        alert(\"Es d端rfen nicht mehr als 60 Sekunden eingetragen werden\");\n      }\n      this.isChecked = true;\n    }\n  }\n};","map":{"version":3,"mappings":"AAsDE,OAAOA,UAAS,MAAO,qBAAqB;AAC5C,eAAe;EACbC,UAAU,EAAE;IAAED;EAAW,CAAC;EAC1BE,IAAI,GAAG;IACL,OAAO;MACLC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAK,GAAG;MACN,IAAI,CAACC,UAAU,EAAE;MAEjB,IAAI,CAACR,WAAU,GAAI,IAAI;MACvB,IAAI,IAAI,CAACE,KAAI,IAAK,KAAK,IAAI,CAACC,OAAM,IAAK,KAAK,IAAI,CAACC,OAAM,IAAK,CAAC,EAAE;QAC7D,IAAI,CAACF,KAAI,GAAI,CAAC;QACd,IAAI,CAACC,OAAM,GAAI,CAAC;QAChB,IAAI,CAACC,OAAM,GAAI,CAAC;QAChB,IAAI,CAACJ,WAAU,GAAI,KAAK;QACxB,IAAI,CAACS,SAAS;MAChB,OAAO,IAAI,IAAI,CAACL,OAAM,IAAK,CAAC,EAAE;QAC5B;QACA,IAAI,CAACA,OAAO,EAAE;MAChB,OAAO,IAAI,IAAI,CAACD,OAAM,IAAK,KAAK,IAAI,CAACC,OAAM,IAAK,CAAC,EAAE;QACjD,IAAI,CAACA,OAAM,GAAI,EAAE;QACjB,IAAI,CAACD,OAAO,EAAE;MAChB,OAAO,IAAI,IAAI,CAACD,KAAI,IAAK,KAAK,IAAI,CAACC,OAAM,IAAK,CAAC,EAAE;QAC/C,IAAI,CAACA,OAAM,GAAI,EAAE;QACjB,IAAI,CAACD,KAAK,EAAE;MACd;MACA;MACA;IACF,CAAC;IACDQ,cAAc,GAAG;MACf,IAAI,CAACT,UAAS,GAAIU,WAAW,CAAC,MAAM;QAClC,IAAI,CAACJ,KAAK,EAAE;MACd,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDK,UAAU,GAAG;MACX,IAAI,CAACV,KAAI,GAAI,CAAC;MACd,IAAI,CAACC,OAAM,GAAI,CAAC;MAChB,IAAI,CAACC,OAAM,GAAI,CAAC;MAChB,IAAI,CAACK,SAAS;MACd,IAAI,CAACT,WAAU,GAAI,KAAK;IAC1B,CAAC;IACDS,SAAS,GAAG;MACVI,aAAa,CAAC,IAAI,CAACZ,UAAU,CAAC;IAChC,CAAC;IACDO,UAAU,GAAG;MACX,IAAI,IAAI,CAACL,OAAM,GAAI,EAAE,EAAE;QACrB,IAAI,CAACA,OAAM,GAAI,EAAE;QACjBW,KAAK,CAAC,wDAAwD,CAAC;MACjE;MACA,IAAI,IAAI,CAACV,OAAM,GAAI,EAAE,EAAE;QACrB,IAAI,CAACA,OAAM,GAAI,EAAE;QACjBU,KAAK,CAAC,yDAAyD,CAAC;MAClE;MACA,IAAI,CAACT,SAAQ,GAAI,IAAI;IACvB;EACF;AACF,CAAC","names":["BaseButton","components","data","timeStarted","startTimer","hours","minutes","seconds","isChecked","methods","timer","validation","stopTimer","startCountdown","setInterval","resetTimer","clearInterval","alert"],"sourceRoot":"","sources":["C:\\Users\\meteh\\OneDrive\\Dokumente\\HTW Wirtschaftsinformatik\\Softwarergonomie\\ScrumPrototyp\\src\\components\\TheTimer.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"wrapper\">\r\n        <h1>Countdown</h1>\r\n        <div class=\"currentTime\">\r\n          <p class=\"timestamp\" v-if=\"timeStarted\">\r\n            {{ hours }} : {{ minutes }}: {{ seconds }}\r\n          </p>\r\n        </div>\r\n        <div class=\"timeWrapper\" v-if=\"!timeStarted\">\r\n          <div class=\"hours_container\">\r\n            <p id=\"hours\" class=\"time\">Hours</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"inputHour\"\r\n              min=\"0\"\r\n              max=\"96\"\r\n              class=\"inputTime\"\r\n              v-model=\"hours\"\r\n            />\r\n          </div>\r\n          <div class=\"minutes_container\">\r\n            <p id=\"minutes\" class=\"time\">Minutes</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"inputMinutes\"\r\n              min=\"0\"\r\n              max=\"60\"\r\n              class=\"inputTime\"\r\n              v-model=\"minutes\"\r\n            />\r\n          </div>\r\n          <div class=\"seconds_container\">\r\n            <p id=\"seconds\" class=\"time\">Seconds</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"inputSeconds\"\r\n              min=\"0\"\r\n              max=\"60\"\r\n              class=\"inputTime\"\r\n              v-model=\"seconds\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"button_container\">\r\n          <base-button id=\"start\" @click=\"startCountdown\">Start</base-button>\r\n          <base-button id=\"stop\" @click=\"stopTimer\">Stop</base-button>\r\n          <base-button id=\"reset\" @click=\"resetTimer\">Reset</base-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import BaseButton from \"@/ui/BaseButton.vue\";\r\n  export default {\r\n    components: { BaseButton },\r\n    data() {\r\n      return {\r\n        timeStarted: false,\r\n        startTimer: null,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n        isChecked: false,\r\n      };\r\n    },\r\n    methods: {\r\n      timer() {\r\n        this.validation();\r\n  \r\n        this.timeStarted = true;\r\n        if (this.hours == 0 && this.minutes == 0 && this.seconds == 0) {\r\n          this.hours = 0;\r\n          this.minutes = 0;\r\n          this.seconds = 0;\r\n          this.timeStarted = false;\r\n          this.stopTimer;\r\n        } else if (this.seconds != 0) {\r\n          //seconds.value = seconds.value - 1;\r\n          this.seconds--;\r\n        } else if (this.minutes != 0 && this.seconds == 0) {\r\n          this.seconds = 59;\r\n          this.minutes--;\r\n        } else if (this.hours != 0 && this.minutes == 0) {\r\n          this.minutes = 60;\r\n          this.hours--;\r\n        }\r\n        //  console.log(this.seconds);\r\n        return;\r\n      },\r\n      startCountdown() {\r\n        this.startTimer = setInterval(() => {\r\n          this.timer();\r\n        }, 1000);\r\n      },\r\n      resetTimer() {\r\n        this.hours = 0;\r\n        this.minutes = 0;\r\n        this.seconds = 0;\r\n        this.stopTimer;\r\n        this.timeStarted = false;\r\n      },\r\n      stopTimer() {\r\n        clearInterval(this.startTimer);\r\n      },\r\n      validation() {\r\n        if (this.minutes > 60) {\r\n          this.minutes = 60;\r\n          alert(\"Es d端rfen nicht mehr als 60 Minuten eingetragen werden\");\r\n        }\r\n        if (this.seconds > 60) {\r\n          this.seconds = 60;\r\n          alert(\"Es d端rfen nicht mehr als 60 Sekunden eingetragen werden\");\r\n        }\r\n        this.isChecked = true;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  h1 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .timestamp {\r\n    font-size: 5rem;\r\n  }\r\n  \r\n  .timeWrapper {\r\n    display: flex;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .timeWrapper input {\r\n    border: 2px solid black;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    padding: 5px 10px;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .button_container {\r\n    display: flex;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module"}