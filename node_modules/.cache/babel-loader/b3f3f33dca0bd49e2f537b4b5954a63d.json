{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"title\\\"> John-Todo </div><div class=\\\"head\\\"><p class=\\\"expanded\\\"><input class=\\\"input\\\" type=\\\"text\\\"></p><p class=\\\"control\\\"><a class=\\\"btn\\\"> Speichern </a></p></div>\", 2);\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"card\\\"><div class=\\\"card-content\\\"><div class=\\\"content\\\"><div class=\\\"columns\\\"><div class=\\\"column\\\"> Ich muss </div><div class=\\\"buttons\\\"><button class=\\\"done\\\">Done</button><button class=\\\"delete\\\">Delete</button></div></div></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, _toDisplayString(index) + \": \" + _toDisplayString(item.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_4]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAC;AAAM;;;;uBAAjBC,oBA0CM,OA1CNC,UA0CM,GAxCFC,UAEM,qBAcNF,oBAEIG,6BAFyBC,WAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAxBN,oBAEI;MAFiCO,GAAG,EAAED;IAAK,oBAC5CA,KAAK,IAAG,IAAE,oBAAGD,IAAI,CAACG,IAAI;kCAIzBC,UAiBM","names":["class","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","$data","item","index","key","name","_hoisted_4"],"sourceRoot":"","sources":["/Users/john-simonbachhuber/Studium/6 Semester/Softwareergonomie/ScrumPrototyp/src/components/JohnToDo.vue"],"sourcesContent":["<template>\r\n<div class=\"todo\">\r\n\r\n    <div class=\"title\">\r\n        John-Todo\r\n    </div>\r\n\r\n    <div class=\"head\">\r\n        <p class=\"expanded\">\r\n            <input class=\"input\" type=\"text\"/>\r\n        </p>\r\n        <p class=\"control\">\r\n            <a class=\"btn\">\r\n                Speichern\r\n            </a>\r\n        </p>\r\n    </div>\r\n\r\n\r\n    <div v-for=\"(item, index) in todos\" :key=\"index\">\r\n    {{ index }}: {{ item.name }}\r\n  </div>\r\n\r\n\r\n    <div \r\n    class=\"card\"\r\n    >\r\n        <div class=\"card-content\">\r\n            <div class=\"content\">\r\n\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        Ich muss \r\n                    </div>\r\n                    <div class=\"buttons\">\r\n                        <button class=\"done\">Done</button>\r\n                        <button class=\"delete\">Delete</button>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>            \r\nexport default {\r\n    data() {\r\n    return {\r\n        todos: [{ id: 'id1', content: 'gzsadfsf', done: false}, {id: 'id2', content: '23123123', done: false}]\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.columns{\r\n    display: flex;\r\n    justify-content: start;\r\n}\r\n.column{\r\n    height: auto;\r\n}\r\n.buttons{\r\n    margin-left: 90px;\r\n}\r\n.delete{\r\n    background-color: red;\r\n    cursor: pointer;\r\n    height: 25px;\r\n    width: 50px;\r\n    border: none;\r\n}\r\n.done{\r\n    background-color: green;\r\n    cursor: pointer;\r\n    height: 25px;\r\n    width: 50px;\r\n    border: none;\r\n}\r\n.card {\r\n    background: #e5e5e5;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n    display: flex;\r\n}\r\n.title{\r\n    text-align: center;\r\n}\r\n.todo{\r\n    max-width: 400px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n}\r\n.head{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.input{\r\n    background: #e5e5e5;\r\n    padding: 5px;\r\n}\r\n.btn{\r\n    margin-left: 20px;\r\n    cursor: pointer;\r\n    background: #689aaf;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}