{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-900f83ba\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"head\"\n}, \"Rolle: \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString($options.fullname), 1 /* TEXT */), _createElementVNode(\"p\", null, [_hoisted_1, _createTextVNode(), _createElementVNode(\"i\", null, _toDisplayString($options.roleP), 1 /* TEXT */)])]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.todosP, todo => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: todo\n      }, _toDisplayString(todo), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEAIMA,oBAAiC;EAA3BC,KAAK,EAAC;AAAM,GAAC,SAAO;;;;6DAH9BC,aAKYC;sBAJV,MAAuB,CAAvBH,oBAAuB,6BAAhBI,iBAAQ,kBACfJ,oBAEI,YADFK,UAAiC,sBAACL,oBAAkB,4BAAZI,cAAK;;;MAIjDF,aAIYC;sBAHV,MAEK,CAFLH,oBAEK,gCADHM,oBAAsDC,6BAAnCH,eAAM,EAAdI,IAAI;2BAAfF,oBAAsD;QAA1BG,GAAG,EAAED;MAAI,oBAAKA,IAAI","names":["_createElementVNode","class","_createVNode","_component_base_card","$options","_hoisted_1","_createElementBlock","_Fragment","todo","key"],"sourceRoot":"","sources":["/Users/john-simonbachhuber/Studium/6 Semester/Softwareergonomie/ScrumPrototyp/src/components/user/UserDetails.vue"],"sourcesContent":["<template>\n  <base-card>\n    <h3>{{ fullname }}</h3>\n    <p>\n      <span class=\"head\">Rolle: </span> <i>{{ roleP }}</i>\n    </p>\n  </base-card>\n\n  <base-card>\n    <ul>\n      <li v-for=\"todo in todosP\" :key=\"todo\">{{ todo }}</li>\n    </ul>\n  </base-card>\n</template>\n\n<script>\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      selectedUser: null,\n    };\n  },\n  computed: {\n    fullname() {\n      return this.selectedUser.firstName + \" \" + this.selectedUser.lastName;\n    },\n    roleP() {\n      return this.selectedUser.role;\n    },\n    todosP() {\n      return this.selectedUser.todos;\n    },\n  },\n  created() {\n    this.selectedUser = this.$store.getters[\"userModule/users\"].find(\n      (user) => user.id === this.id\n    );\n    console.log(this.selectedUser);\n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  margin-bottom: 1rem;\n}\n\n.head {\n  font-weight: bold;\n}\n\nli {\n  list-style-type: number;\n  margin: 1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}